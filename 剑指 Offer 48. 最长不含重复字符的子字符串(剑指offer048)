// 请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        // 使用集合保存不重复的元素的原理
        // 时间复杂度O(n2),空间复杂度O(n)
        if (s=="") return 0;
        int m = s.size(),sum=0,mid;
        unordered_set<char> res;
        // int start,end;
        for (int i= 0; i< m; ++i) {
            res.emplace(s[i]);
            mid=1;
            for (int j= i+1; j< m; ++j) {
                res.emplace(s[j]);
                if (mid == res.size()) break;
                mid = res.size();
            }
            sum = max(sum,mid);
            res = {};
        }
        return sum;
    }
};
