// 给你一个正整数数组 values，其中 values[i] 表示第 i 个观光景点的评分，并且两个景点 i 和 j 之间的 距离 为 j - i。
// 一对景点（i < j）组成的观光组合的得分为 values[i] + values[j] + i - j ，也就是景点的评分之和 减去 它们两者之间的距离。
// 返回一对观光景点能取得的最高分。

class Solution {
public:
    int maxScoreSightseeingPair(vector<int>& values) {
        int m = values.size(), res = INT_MIN;
        // 定义记录前一个数的变量front，记录前一个数的索引变量findex
        int front = values[0], findex = 0, sum; 
        for (int i = 1; i < m; ++i) {
            sum = front + values[i] + findex - i;
            res = max(res, sum);
            // 如果前一个数减去当前索引差<=当前数，则更新前一个数的值和索引
            if (front - i + findex <= values[i]) {
                findex = i;
                front = values[i];
            }
        }
        return res;
    }
};
