// 输入一棵二叉树的根节点，求该树的深度。从根节点到叶节点依次经过的节点（含根、叶节点）形成树的一条路径，最长路径的长度为树的深度。

class Solution {
public:
    // 时间复杂度O(n),空间复杂度O(n)
    int maxDepth(TreeNode* root) {
        if (!root) return 0;
        // // DFS深度遍历
        // return max(maxDepth(root->left),maxDepth(root->right))+1;
        // 广度层序遍历
        queue<TreeNode*> q;
        q.push(root);
        int res=0;
        while(!q.empty()) {
            queue<TreeNode*> m ;
            while(!q.empty()){
                TreeNode* node = q.front(); q.pop();
                if(node->left) m.push(node->left);
                if(node->right) m.push(node->right);
            }
            q = m;
            res++;
        }
        return res;
    }
};
