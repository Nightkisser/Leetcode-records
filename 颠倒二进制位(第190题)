// 颠倒给定的 32 位无符号整数的二进制位。

class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        // uint32_t res = 0;
        // int i = 0;
        // 一次循环
        // 时间复杂度O(logN),空间复杂度O(1)
        // for (int i = 0; i < 32; ++i) {
        //     res = (res << 1) | (n & 1);
        //     n >>= 1;
        // }
        // while (i < 32) {
        //     res = (res << 1) | (n&1);
        //     n >>= 1;
        //     i++;
        // }
        // return res;

        // 分而治之
        // 时间复杂度O(1),空间复杂度O(1)
        // 左右分割,右左拼接
        n = (n >> 16) | (n << 16);
        n = ((n & 0xff00ff00) >> 8) | ((n & 0x00ff00ff) << 8);
        n = ((n & 0xf0f0f0f0) >> 4) | ((n & 0x0f0f0f0f) << 4);
        n = ((n & 0xcccccccc) >> 2) | ((n & 0x33333333) << 2);
        n = ((n & 0xaaaaaaaa) >> 1) | ((n & 0x55555555) << 1);
        return n;
    }
    
};
