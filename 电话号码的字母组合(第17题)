// 给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。
//给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。

class Solution {
private:
    map<int,string> mp= {{2, "abc"}, {3, "def"}, {4, "ghi"}, {5, "jkl"}, {6, "mno"}, {7, "pqrs"}, {8, "tuv"}, {9, "wxyz"}};
public:
    void recur(int used, int m, string& mid, string& dig, vector<string>& res) {
        if (mid.size() == m) {
            res.push_back(mid);
            return ;
        }
        for (int i = 0; i < mp[dig[used]-'0'].size(); ++i) {
            mid.push_back( mp[dig[used]-'0'][i]);
            recur(used+1, m, mid, dig, res);
            mid.pop_back();
        }
    }
    vector<string> letterCombinations(string digits) {
        // 时间复杂度O(3^m*4*n),空间复杂度O(m+n),即O(N)，递归层数
        vector<string> alphabet, res;
        int m = digits.size();
        if(m == 0) return {};
        string mid;
        recur(0, m, mid, digits, res);
        return res;
    }
};
