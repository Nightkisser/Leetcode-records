/*输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历结果。如果是则返回 true，否则返回 false。假设输入的数组的任意两个数字都互不相同。*/
class Solution {
public:
    bool verifyPostorder(vector<int>& postorder) {
        if (postorder.size()==0) return true;
        return recur(postorder,0,postorder.size()-1);
    }
    // 左子树都小于根节点，右子树都大于根节点
    // 时间复杂度O(n2)，空间复杂度O(n)
    bool recur(vector<int>& postorder, int i, int j) {
        if(i >= j) return true;
        int p = i;
        while(postorder[p] < postorder[j]) p++;
        int m = p;
        while(postorder[p] > postorder[j]) p++;
        return p == j recur(postorder, i, m - 1) && recur(postorder, m, j - 1);
    }
};
