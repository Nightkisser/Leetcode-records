// 给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。

class Solution {
public:
    int search(vector<int>& nums, int target) {
        // 时间复杂度O(logN),空间复杂度O(1)
        int m = nums.size();
        if (m == 0) return -1;
        int left = 0, right = m-1, mid;
        // 向下取中间值，right=mid，返回right
        // while (left < right) {
        //     mid = left + (right - left)/2;
        //     if (nums[mid] > target) right = mid;
        //     else if (nums[mid] < target) left = mid + 1;
        //     else right = mid;
        // }
        // if (nums[right] != target) return -1;
        // return right;
        // 向上取中间值，left=mid，返回left
        while (left < right) {
            mid = left + (right - left)+1/2;
            if (nums[mid] > target) right = mid-1;
            else if (nums[mid] < target) left = mid;
            else left = mid;
        }
        if (nums[left] != target) return -1;
        return left;
    }
};
